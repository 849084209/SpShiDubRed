<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">


	<context:property-placeholder location="classpath:properties/*.properties" />

	<!-- 启用spring mvc 注解 -->
	<context:annotation-config />
	<!-- 使用Annotation自动注册Bean -->
	<context:component-scan base-package="com.wilmar.tms.rms.service.impl">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>


	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<!-- 配置连接池的基本属性 -->
		<property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
		<property name="url"
			value="jdbc:sqlserver://mhstlogsqlpass01.database.chinacloudapi.cn:1433;databaseName=TMS_REFACTOR" />
		<property name="username" value="itm" />
		<property name="password" value="F1i426A6y351" />
		<!-- dbcp2连接池的私有属性 -->
		<property name="maxTotal" value="30" />
		<property name="maxWaitMillis" value="1000" />
		<property name="maxIdle" value="100" />
		<property name="removeAbandonedTimeout" value="300" />
		<property name="testOnBorrow" value="true" />
		<property name="logAbandoned" value="true" />
		<property name="defaultAutoCommit" value="true" />
	</bean>

	<!-- Java现在的流行的一个思想: 约定大于配置 -->

	<!--3. 配置SqlSessionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置MyBatis全局配置文件 -->
		<property name="configLocation" value="classpath:spring/mybatis-config.xml" />
		<!-- 扫描entity包, 使用别名; 当有多个包的时候, 使用分号给他分开 org.ssm.entity;org.ssm.entity2;org.ssm.entity3 -->
		<property name="typeAliasesPackage" value="com.wilmar.tms.rms.domain" />
		<!-- 扫描sql配置文件: mapper需要的xml文件 和扫描entity包一样, 该配置支持扫描多个配置文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml" />

	</bean>

	<!-- 4. 配置扫描Dao接口包, 目的是动态实现Dao接口, 并注入到Spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<!-- 给出需要扫描Dao接口包 -->
		<property name="basePackage" value="com.wilmar.tms.rms.dao" />
	</bean>
	<!-- Transaction Manager -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 支持 @Transactional 标记 -->
	<tx:annotation-driven />
</beans>